// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int    @id @default(autoincrement())
  email          String @unique
  username       String @unique
  hashedPassword String
  Task           Task[]
}

model Device {
  id        String        @unique @id
  name      String        @unique
  updateUTC DateTime?     @updatedAt
  CH4_SN    String?       
  O2_SN     String?        
  CO2_SN    String?        
  PUMP_SN   String?        
  Task      Device_Task[]
  Log       Log[]
}

model Log {
  id           Int      @id @default(autoincrement())
  dateTimeUTC  DateTime
  timestampUTC Int
  deviceId     String?
  taskId       Int?
  logType      String
  logValue     Float
  logNote      String
  Device       Device?  @relation(fields: [deviceId], references: [id])
  Task         Task?    @relation(fields: [taskId], references: [id])
}

model Task {
  id           Int           @id @default(autoincrement())
  startTime    DateTime
  endTime      DateTime
  createdUTC   DateTime
  completedUTC DateTime? 
  name         String        @unique
  logPeriod    Int
  Log          Log[]
  status       String      @default("STARTED")
  Device       Device_Task[]
  createUser   String
  completeUser String?
  User         User          @relation(fields: [createUser], references: [username])
}

model Device_Task {
  Task     Task   @relation(fields: [taskId], references: [id], onDelete: Cascade)
  taskId   Int    @map("task_id")
  Device   Device @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  deviceId String @map("deviceId_id")
  @@id([taskId, deviceId])
  @@map("Device_Task")
}

model Applog {
  id          Int    @id @default(autoincrement())
  taskId      Int
  deviceId    String
  dateTimeUTC String
  evtType     String
  details     String
}
